import uctypes as ct

MPU_ = {
  'TYPE'	: ( 0x00, {
    'reg'	:   0x00 | ct.UINT32,
    'SEPARATE'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'DREGION'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
    'IREGION'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'CTRL'	: ( 0x04, {
    'reg'	:   0x00 | ct.UINT32,
    'ENABLE'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'HFNMIENA'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'PRIVDEFENA'	:   0x00 | ct.BFUINT32 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'RNR'	: ( 0x08, {
    'reg'	:   0x00 | ct.UINT32,
    'REGION'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'RBAR'	: ( 0x0C, {
    'reg'	:   0x00 | ct.UINT32,
    'REGION'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
    'VALID'	:   0x00 | ct.BFUINT32 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADDR'	:   0x00 | ct.BFUINT32 |  5 << ct.BF_POS | 27 << ct.BF_LEN,
  }),
  'RASR'	: ( 0x10, {
    'reg'	:   0x00 | ct.UINT32,
    'ENABLE'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'SIZE'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SRD'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
    'B'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  1 << ct.BF_LEN,
    'C'	:   0x00 | ct.BFUINT32 | 17 << ct.BF_POS |  1 << ct.BF_LEN,
    'S'	:   0x00 | ct.BFUINT32 | 18 << ct.BF_POS |  1 << ct.BF_LEN,
    'TEX'	:   0x00 | ct.BFUINT32 | 19 << ct.BF_POS |  3 << ct.BF_LEN,
    'AP'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  3 << ct.BF_LEN,
    'XN'	:   0x00 | ct.BFUINT32 | 28 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'RBAR_A1'	: ( 0x14, {
    'reg'	:   0x00 | ct.UINT32,
    'REGION'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
    'VALID'	:   0x00 | ct.BFUINT32 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADDR'	:   0x00 | ct.BFUINT32 |  5 << ct.BF_POS | 27 << ct.BF_LEN,
  }),
  'RASR_A1'	: ( 0x18, {
    'reg'	:   0x00 | ct.UINT32,
    'ENABLE'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'SIZE'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SRD'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
    'B'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  1 << ct.BF_LEN,
    'C'	:   0x00 | ct.BFUINT32 | 17 << ct.BF_POS |  1 << ct.BF_LEN,
    'S'	:   0x00 | ct.BFUINT32 | 18 << ct.BF_POS |  1 << ct.BF_LEN,
    'TEX'	:   0x00 | ct.BFUINT32 | 19 << ct.BF_POS |  3 << ct.BF_LEN,
    'AP'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  3 << ct.BF_LEN,
    'XN'	:   0x00 | ct.BFUINT32 | 28 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'RBAR_A2'	: ( 0x1C, {
    'reg'	:   0x00 | ct.UINT32,
    'REGION'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
    'VALID'	:   0x00 | ct.BFUINT32 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADDR'	:   0x00 | ct.BFUINT32 |  5 << ct.BF_POS | 27 << ct.BF_LEN,
  }),
  'RASR_A2'	: ( 0x20, {
    'reg'	:   0x00 | ct.UINT32,
    'ENABLE'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'SIZE'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SRD'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
    'B'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  1 << ct.BF_LEN,
    'C'	:   0x00 | ct.BFUINT32 | 17 << ct.BF_POS |  1 << ct.BF_LEN,
    'S'	:   0x00 | ct.BFUINT32 | 18 << ct.BF_POS |  1 << ct.BF_LEN,
    'TEX'	:   0x00 | ct.BFUINT32 | 19 << ct.BF_POS |  3 << ct.BF_LEN,
    'AP'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  3 << ct.BF_LEN,
    'XN'	:   0x00 | ct.BFUINT32 | 28 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'RBAR_A3'	: ( 0x24, {
    'reg'	:   0x00 | ct.UINT32,
    'REGION'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
    'VALID'	:   0x00 | ct.BFUINT32 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADDR'	:   0x00 | ct.BFUINT32 |  5 << ct.BF_POS | 27 << ct.BF_LEN,
  }),
  'RASR_A3'	: ( 0x28, {
    'reg'	:   0x00 | ct.UINT32,
    'ENABLE'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'SIZE'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SRD'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
    'B'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  1 << ct.BF_LEN,
    'C'	:   0x00 | ct.BFUINT32 | 17 << ct.BF_POS |  1 << ct.BF_LEN,
    'S'	:   0x00 | ct.BFUINT32 | 18 << ct.BF_POS |  1 << ct.BF_LEN,
    'TEX'	:   0x00 | ct.BFUINT32 | 19 << ct.BF_POS |  3 << ct.BF_LEN,
    'AP'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  3 << ct.BF_LEN,
    'XN'	:   0x00 | ct.BFUINT32 | 28 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
}

MPU = ct.struct(0xe000ed90, MPU_)
