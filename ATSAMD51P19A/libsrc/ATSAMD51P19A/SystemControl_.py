import uctypes as ct

SystemControl_ = {
  'ICTR'	: ( 0x04, {
    'reg'	:   0x00 | ct.UINT32,
    'INTLINESNUM'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
  }),
  'ACTLR'	: ( 0x08, {
    'reg'	:   0x00 | ct.UINT32,
    'DISMCYCINT'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'DISDEFWBUF'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'DISFOLD'	:   0x00 | ct.BFUINT32 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'DISFPCA'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'DISOOFP'	:   0x00 | ct.BFUINT32 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'CPUID'	: ( 0xD00, {
    'reg'	:   0x00 | ct.UINT32,
    'REVISION'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
    'PARTNO'	:   0x00 | ct.BFUINT32 |  4 << ct.BF_POS | 12 << ct.BF_LEN,
    'CONSTANT'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  4 << ct.BF_LEN,
    'VARIANT'	:   0x00 | ct.BFUINT32 | 20 << ct.BF_POS |  4 << ct.BF_LEN,
    'IMPLEMENTER'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'ICSR'	: ( 0xD04, {
    'reg'	:   0x00 | ct.UINT32,
    'VECTACTIVE'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  9 << ct.BF_LEN,
    'RETTOBASE'	:   0x00 | ct.BFUINT32 | 11 << ct.BF_POS |  1 << ct.BF_LEN,
    'VECTPENDING'	:   0x00 | ct.BFUINT32 | 12 << ct.BF_POS |  6 << ct.BF_LEN,
    'ISRPENDING'	:   0x00 | ct.BFUINT32 | 22 << ct.BF_POS |  1 << ct.BF_LEN,
    'ISRPREEMPT'	:   0x00 | ct.BFUINT32 | 23 << ct.BF_POS |  1 << ct.BF_LEN,
    'PENDSTCLR'	:   0x00 | ct.BFUINT32 | 25 << ct.BF_POS |  1 << ct.BF_LEN,
    'PENDSTSET'	:   0x00 | ct.BFUINT32 | 26 << ct.BF_POS |  1 << ct.BF_LEN,
    'PENDSVCLR'	:   0x00 | ct.BFUINT32 | 27 << ct.BF_POS |  1 << ct.BF_LEN,
    'PENDSVSET'	:   0x00 | ct.BFUINT32 | 28 << ct.BF_POS |  1 << ct.BF_LEN,
    'NMIPENDSET'	:   0x00 | ct.BFUINT32 | 31 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'VTOR'	: ( 0xD08, {
    'reg'	:   0x00 | ct.UINT32,
    'TBLOFF'	:   0x00 | ct.BFUINT32 |  7 << ct.BF_POS | 25 << ct.BF_LEN,
  }),
  'AIRCR'	: ( 0xD0C, {
    'reg'	:   0x00 | ct.UINT32,
    'VECTRESET'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'VECTCLRACTIVE'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SYSRESETREQ'	:   0x00 | ct.BFUINT32 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'PRIGROUP'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  3 << ct.BF_LEN,
    'ENDIANNESS'	:   0x00 | ct.BFUINT32 | 15 << ct.BF_POS |  1 << ct.BF_LEN,
    'VECTKEY'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS | 16 << ct.BF_LEN,
  }),
  'SCR'	: ( 0xD10, {
    'reg'	:   0x00 | ct.UINT32,
    'SLEEPONEXIT'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SLEEPDEEP'	:   0x00 | ct.BFUINT32 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'SEVONPEND'	:   0x00 | ct.BFUINT32 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'CCR'	: ( 0xD14, {
    'reg'	:   0x00 | ct.UINT32,
    'NONBASETHRDENA'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'USERSETMPEND'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'UNALIGN_TRP'	:   0x00 | ct.BFUINT32 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'DIV_0_TRP'	:   0x00 | ct.BFUINT32 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BFHFNMIGN'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'STKALIGN'	:   0x00 | ct.BFUINT32 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'SHPR1'	: ( 0xD18, {
    'reg'	:   0x00 | ct.UINT32,
    'PRI_4'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  8 << ct.BF_LEN,
    'PRI_5'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
    'PRI_6'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'SHPR2'	: ( 0xD1C, {
    'reg'	:   0x00 | ct.UINT32,
    'PRI_11'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'SHPR3'	: ( 0xD20, {
    'reg'	:   0x00 | ct.UINT32,
    'PRI_14'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  8 << ct.BF_LEN,
    'PRI_15'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'SHCSR'	: ( 0xD24, {
    'reg'	:   0x00 | ct.UINT32,
    'MEMFAULTACT'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'BUSFAULTACT'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'USGFAULTACT'	:   0x00 | ct.BFUINT32 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'SVCALLACT'	:   0x00 | ct.BFUINT32 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'MONITORACT'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'PENDSVACT'	:   0x00 | ct.BFUINT32 | 10 << ct.BF_POS |  1 << ct.BF_LEN,
    'SYSTICKACT'	:   0x00 | ct.BFUINT32 | 11 << ct.BF_POS |  1 << ct.BF_LEN,
    'USGFAULTPENDED'	:   0x00 | ct.BFUINT32 | 12 << ct.BF_POS |  1 << ct.BF_LEN,
    'MEMFAULTPENDED'	:   0x00 | ct.BFUINT32 | 13 << ct.BF_POS |  1 << ct.BF_LEN,
    'BUSFAULTPENDED'	:   0x00 | ct.BFUINT32 | 14 << ct.BF_POS |  1 << ct.BF_LEN,
    'SVCALLPENDED'	:   0x00 | ct.BFUINT32 | 15 << ct.BF_POS |  1 << ct.BF_LEN,
    'MEMFAULTENA'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  1 << ct.BF_LEN,
    'BUSFAULTENA'	:   0x00 | ct.BFUINT32 | 17 << ct.BF_POS |  1 << ct.BF_LEN,
    'USGFAULTENA'	:   0x00 | ct.BFUINT32 | 18 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'CFSR'	: ( 0xD28, {
    'reg'	:   0x00 | ct.UINT32,
    'IACCVIOL'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'DACCVIOL'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'MUNSTKERR'	:   0x00 | ct.BFUINT32 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'MSTKERR'	:   0x00 | ct.BFUINT32 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'MLSPERR'	:   0x00 | ct.BFUINT32 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'MMARVALID'	:   0x00 | ct.BFUINT32 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'IBUSERR'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'PRECISERR'	:   0x00 | ct.BFUINT32 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'IMPRECISERR'	:   0x00 | ct.BFUINT32 | 10 << ct.BF_POS |  1 << ct.BF_LEN,
    'UNSTKERR'	:   0x00 | ct.BFUINT32 | 11 << ct.BF_POS |  1 << ct.BF_LEN,
    'STKERR'	:   0x00 | ct.BFUINT32 | 12 << ct.BF_POS |  1 << ct.BF_LEN,
    'LSPERR'	:   0x00 | ct.BFUINT32 | 13 << ct.BF_POS |  1 << ct.BF_LEN,
    'BFARVALID'	:   0x00 | ct.BFUINT32 | 15 << ct.BF_POS |  1 << ct.BF_LEN,
    'UNDEFINSTR'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  1 << ct.BF_LEN,
    'INVSTATE'	:   0x00 | ct.BFUINT32 | 17 << ct.BF_POS |  1 << ct.BF_LEN,
    'INVPC'	:   0x00 | ct.BFUINT32 | 18 << ct.BF_POS |  1 << ct.BF_LEN,
    'NOCP'	:   0x00 | ct.BFUINT32 | 19 << ct.BF_POS |  1 << ct.BF_LEN,
    'UNALIGNED'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  1 << ct.BF_LEN,
    'DIVBYZERO'	:   0x00 | ct.BFUINT32 | 25 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'HFSR'	: ( 0xD2C, {
    'reg'	:   0x00 | ct.UINT32,
    'VECTTBL'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'FORCED'	:   0x00 | ct.BFUINT32 | 30 << ct.BF_POS |  1 << ct.BF_LEN,
    'DEBUGEVT'	:   0x00 | ct.BFUINT32 | 31 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'DFSR'	: ( 0xD30, {
    'reg'	:   0x00 | ct.UINT32,
    'HALTED'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'BKPT'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'DWTTRAP'	:   0x00 | ct.BFUINT32 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'VCATCH'	:   0x00 | ct.BFUINT32 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'EXTERNAL'	:   0x00 | ct.BFUINT32 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'MMFAR'	: 0xD34 | ct.UINT32,
  'BFAR'	: 0xD38 | ct.UINT32,
  'AFSR'	: 0xD3C | ct.UINT32,
  'PFR'	: ( 0xD40 | ct.ARRAY, 2 | ct.UINT32 ),
  'DFR'	: 0xD48 | ct.UINT32,
  'ADR'	: 0xD4C | ct.UINT32,
  'MMFR'	: ( 0xD50 | ct.ARRAY, 4 | ct.UINT32 ),
  'ISAR'	: ( 0xD60 | ct.ARRAY, 5 | ct.UINT32 ),
  'CPACR'	: ( 0xD88, {
    'reg'	:   0x00 | ct.UINT32,
    'CP10'	:   0x00 | ct.BFUINT32 | 20 << ct.BF_POS |  2 << ct.BF_LEN,
    'CP11'	:   0x00 | ct.BFUINT32 | 22 << ct.BF_POS |  2 << ct.BF_LEN,
  }),
}

SystemControl = ct.struct(0xe000e000, SystemControl_)
