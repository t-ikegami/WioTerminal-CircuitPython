import uctypes as ct

USB_DEVICE_DEVICE_ENDPOINT = {
  'EPCFG'	: ( 0x00, {
    'reg'	:   0x00 | ct.UINT8,
    'EPTYPE0'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  3 << ct.BF_LEN,
    'EPTYPE1'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  3 << ct.BF_LEN,
    'NYETDIS'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EPSTATUSCLR'	: ( 0x04, {
    'reg'	:   0x00 | ct.UINT8,
    'DTGLOUT'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'DTGLIN'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURBK'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALLRQ0'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALLRQ1'	:   0x00 | ct.BFUINT8 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK0RDY'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK1RDY'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EPSTATUSSET'	: ( 0x05, {
    'reg'	:   0x00 | ct.UINT8,
    'DTGLOUT'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'DTGLIN'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURBK'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALLRQ0'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALLRQ1'	:   0x00 | ct.BFUINT8 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK0RDY'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK1RDY'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EPSTATUS'	: ( 0x06, {
    'reg'	:   0x00 | ct.UINT8,
    'DTGLOUT'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'DTGLIN'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURBK'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALLRQ0'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALLRQ1'	:   0x00 | ct.BFUINT8 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK0RDY'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK1RDY'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EPINTFLAG'	: ( 0x07, {
    'reg'	:   0x00 | ct.UINT8,
    'TRCPT0'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRCPT1'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFAIL0'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFAIL1'	:   0x00 | ct.BFUINT8 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'RXSTP'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALL0'	:   0x00 | ct.BFUINT8 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALL1'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EPINTENCLR'	: ( 0x08, {
    'reg'	:   0x00 | ct.UINT8,
    'TRCPT0'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRCPT1'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFAIL0'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFAIL1'	:   0x00 | ct.BFUINT8 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'RXSTP'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALL0'	:   0x00 | ct.BFUINT8 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALL1'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EPINTENSET'	: ( 0x09, {
    'reg'	:   0x00 | ct.UINT8,
    'TRCPT0'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRCPT1'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFAIL0'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFAIL1'	:   0x00 | ct.BFUINT8 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'RXSTP'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALL0'	:   0x00 | ct.BFUINT8 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALL1'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'DUMMY_FILLER'	: 0x1F | ct.UINT8,
}

USB_DEVICE = {
  'CTRLA'	: ( 0x00, {
    'reg'	:   0x00 | ct.UINT8,
    'SWRST'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'ENABLE'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'RUNSTDBY'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'MODE'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'SYNCBUSY'	: ( 0x02, {
    'reg'	:   0x00 | ct.UINT8,
    'SWRST'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'ENABLE'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'QOSCTRL'	: ( 0x03, {
    'reg'	:   0x00 | ct.UINT8,
    'CQOS'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  2 << ct.BF_LEN,
    'DQOS'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  2 << ct.BF_LEN,
  }),
  'CTRLB'	: ( 0x08, {
    'reg'	:   0x00 | ct.UINT16,
    'DETACH'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'UPRSM'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SPDCONF'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  2 << ct.BF_LEN,
    'NREPLY'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'TSTJ'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'TSTK'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'TSTPCKT'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'OPMODE2'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'GNAK'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'LPMHDSK'	:   0x00 | ct.BFUINT16 | 10 << ct.BF_POS |  2 << ct.BF_LEN,
  }),
  'DADD'	: ( 0x0A, {
    'reg'	:   0x00 | ct.UINT8,
    'DADD'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  7 << ct.BF_LEN,
    'ADDEN'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'STATUS'	: ( 0x0C, {
    'reg'	:   0x00 | ct.UINT8,
    'SPEED'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  2 << ct.BF_LEN,
    'LINESTATE'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  2 << ct.BF_LEN,
  }),
  'FSMSTATUS'	: ( 0x0D, {
    'reg'	:   0x00 | ct.UINT8,
    'FSMSTATE'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  7 << ct.BF_LEN,
  }),
  'FNUM'	: ( 0x10, {
    'reg'	:   0x00 | ct.UINT16,
    'MFNUM'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  3 << ct.BF_LEN,
    'FNUM'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS | 11 << ct.BF_LEN,
    'FNCERR'	:   0x00 | ct.BFUINT16 | 15 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'INTENCLR'	: ( 0x14, {
    'reg'	:   0x00 | ct.UINT16,
    'SUSPEND'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'MSOF'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SOF'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'EORST'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'WAKEUP'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'EORSM'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'UPRSM'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'RAMACER'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'LPMNYET'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'LPMSUSP'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'INTENSET'	: ( 0x18, {
    'reg'	:   0x00 | ct.UINT16,
    'SUSPEND'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'MSOF'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SOF'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'EORST'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'WAKEUP'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'EORSM'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'UPRSM'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'RAMACER'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'LPMNYET'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'LPMSUSP'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'INTFLAG'	: ( 0x1C, {
    'reg'	:   0x00 | ct.UINT16,
    'SUSPEND'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'MSOF'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SOF'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'EORST'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'WAKEUP'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'EORSM'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'UPRSM'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'RAMACER'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'LPMNYET'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'LPMSUSP'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EPINTSMRY'	: ( 0x20, {
    'reg'	:   0x00 | ct.UINT16,
    'EPINT0'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT1'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT2'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT3'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT4'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT5'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT6'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT7'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'DESCADD'	: 0x24 | ct.UINT32,
  'PADCAL'	: ( 0x28, {
    'reg'	:   0x00 | ct.UINT16,
    'TRANSP'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  5 << ct.BF_LEN,
    'TRANSN'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  5 << ct.BF_LEN,
    'TRIM'	:   0x00 | ct.BFUINT16 | 12 << ct.BF_POS |  3 << ct.BF_LEN,
  }),
  'DEVICE_ENDPOINT'	: ( 0x100 | ct.ARRAY, 8, USB_DEVICE_DEVICE_ENDPOINT ),
}

USB_HOST_HOST_PIPE = {
  'PCFG'	: ( 0x00, {
    'reg'	:   0x00 | ct.UINT8,
    'PTOKEN'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  2 << ct.BF_LEN,
    'BK'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'PTYPE'	:   0x00 | ct.BFUINT8 |  3 << ct.BF_POS |  3 << ct.BF_LEN,
  }),
  'BINTERVAL'	: 0x03 | ct.UINT8,
  'PSTATUSCLR'	: ( 0x04, {
    'reg'	:   0x00 | ct.UINT8,
    'DTGL'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURBK'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'PFREEZE'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK0RDY'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK1RDY'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'PSTATUSSET'	: ( 0x05, {
    'reg'	:   0x00 | ct.UINT8,
    'DTGL'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURBK'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'PFREEZE'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK0RDY'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK1RDY'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'PSTATUS'	: ( 0x06, {
    'reg'	:   0x00 | ct.UINT8,
    'DTGL'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURBK'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'PFREEZE'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK0RDY'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'BK1RDY'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'PINTFLAG'	: ( 0x07, {
    'reg'	:   0x00 | ct.UINT8,
    'TRCPT0'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRCPT1'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFAIL'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'PERR'	:   0x00 | ct.BFUINT8 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'TXSTP'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALL'	:   0x00 | ct.BFUINT8 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'PINTENCLR'	: ( 0x08, {
    'reg'	:   0x00 | ct.UINT8,
    'TRCPT0'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRCPT1'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFAIL'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'PERR'	:   0x00 | ct.BFUINT8 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'TXSTP'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALL'	:   0x00 | ct.BFUINT8 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'PINTENSET'	: ( 0x09, {
    'reg'	:   0x00 | ct.UINT8,
    'TRCPT0'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRCPT1'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFAIL'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'PERR'	:   0x00 | ct.BFUINT8 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'TXSTP'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'STALL'	:   0x00 | ct.BFUINT8 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'DUMMY_FILLER'	: 0x1F | ct.UINT8,
}

USB_HOST = {
  'CTRLA'	: ( 0x00, {
    'reg'	:   0x00 | ct.UINT8,
    'SWRST'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'ENABLE'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'RUNSTDBY'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'MODE'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'SYNCBUSY'	: ( 0x02, {
    'reg'	:   0x00 | ct.UINT8,
    'SWRST'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'ENABLE'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'QOSCTRL'	: ( 0x03, {
    'reg'	:   0x00 | ct.UINT8,
    'CQOS'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  2 << ct.BF_LEN,
    'DQOS'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  2 << ct.BF_LEN,
  }),
  'CTRLB'	: ( 0x08, {
    'reg'	:   0x00 | ct.UINT16,
    'RESUME'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SPDCONF'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  2 << ct.BF_LEN,
    'AUTORESUME'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'TSTJ'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'TSTK'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'SOFE'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'BUSRESET'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'VBUSOK'	:   0x00 | ct.BFUINT16 | 10 << ct.BF_POS |  1 << ct.BF_LEN,
    'L1RESUME'	:   0x00 | ct.BFUINT16 | 11 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'HSOFC'	: ( 0x0A, {
    'reg'	:   0x00 | ct.UINT8,
    'FLENC'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
    'FLENCE'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'STATUS'	: ( 0x0C, {
    'reg'	:   0x00 | ct.UINT8,
    'SPEED'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  2 << ct.BF_LEN,
    'LINESTATE'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  2 << ct.BF_LEN,
  }),
  'FSMSTATUS'	: ( 0x0D, {
    'reg'	:   0x00 | ct.UINT8,
    'FSMSTATE'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  7 << ct.BF_LEN,
  }),
  'FNUM'	: ( 0x10, {
    'reg'	:   0x00 | ct.UINT16,
    'MFNUM'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  3 << ct.BF_LEN,
    'FNUM'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS | 11 << ct.BF_LEN,
  }),
  'FLENHIGH'	: 0x12 | ct.UINT8,
  'INTENCLR'	: ( 0x14, {
    'reg'	:   0x00 | ct.UINT16,
    'HSOF'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'RST'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'WAKEUP'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DNRSM'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'UPRSM'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'RAMACER'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'DCONN'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'DDISC'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'INTENSET'	: ( 0x18, {
    'reg'	:   0x00 | ct.UINT16,
    'HSOF'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'RST'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'WAKEUP'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DNRSM'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'UPRSM'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'RAMACER'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'DCONN'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'DDISC'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'INTFLAG'	: ( 0x1C, {
    'reg'	:   0x00 | ct.UINT16,
    'HSOF'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'RST'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'WAKEUP'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DNRSM'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'UPRSM'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'RAMACER'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'DCONN'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'DDISC'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'PINTSMRY'	: ( 0x20, {
    'reg'	:   0x00 | ct.UINT16,
    'EPINT0'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT1'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT2'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT3'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT4'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT5'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT6'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'EPINT7'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'DESCADD'	: 0x24 | ct.UINT32,
  'PADCAL'	: ( 0x28, {
    'reg'	:   0x00 | ct.UINT16,
    'TRANSP'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  5 << ct.BF_LEN,
    'TRANSN'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  5 << ct.BF_LEN,
    'TRIM'	:   0x00 | ct.BFUINT16 | 12 << ct.BF_POS |  3 << ct.BF_LEN,
  }),
  'HOST_PIPE'	: ( 0x100 | ct.ARRAY, 8, USB_HOST_HOST_PIPE ),
}

USB_ = {
  'DEVICE'	: ( 0x00, USB_DEVICE ),
  'HOST'	: ( 0x00, USB_HOST ),
}

USB = ct.struct(0x41000000, USB_)
