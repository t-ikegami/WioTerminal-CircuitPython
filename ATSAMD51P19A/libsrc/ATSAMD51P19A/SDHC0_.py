import uctypes as ct

SDHC_ = {
  'SSAR'	: 0x00 | ct.UINT32,
  'SSAR_CMD23_MODE'	: 0x00 | ct.UINT32,
  'BSR'	: ( 0x04, {
    'reg'	:   0x00 | ct.UINT16,
    'BLOCKSIZE'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS | 10 << ct.BF_LEN,
    'BOUNDARY'	:   0x00 | ct.BFUINT16 | 12 << ct.BF_POS |  3 << ct.BF_LEN,
  }),
  'BCR'	: 0x06 | ct.UINT16,
  'ARG1R'	: 0x08 | ct.UINT32,
  'TMR'	: ( 0x0C, {
    'reg'	:   0x00 | ct.UINT16,
    'DMAEN'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'BCEN'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMDEN'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  2 << ct.BF_LEN,
    'DTDSEL'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'MSBSEL'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'CR'	: ( 0x0E, {
    'reg'	:   0x00 | ct.UINT16,
    'RESPTYP'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  2 << ct.BF_LEN,
    'CMDCCEN'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDICEN'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DPSEL'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDTYP'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  2 << ct.BF_LEN,
    'CMDIDX'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  6 << ct.BF_LEN,
  }),
  'RR'	: ( 0x10 | ct.ARRAY, 4 | ct.UINT32 ),
  'BDPR'	: 0x20 | ct.UINT32,
  'PSR'	: ( 0x24, {
    'reg'	:   0x00 | ct.UINT32,
    'CMDINHC'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDINHD'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'DLACT'	:   0x00 | ct.BFUINT32 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'RTREQ'	:   0x00 | ct.BFUINT32 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'WTACT'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'RTACT'	:   0x00 | ct.BFUINT32 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'BUFWREN'	:   0x00 | ct.BFUINT32 | 10 << ct.BF_POS |  1 << ct.BF_LEN,
    'BUFRDEN'	:   0x00 | ct.BFUINT32 | 11 << ct.BF_POS |  1 << ct.BF_LEN,
    'CARDINS'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  1 << ct.BF_LEN,
    'CARDSS'	:   0x00 | ct.BFUINT32 | 17 << ct.BF_POS |  1 << ct.BF_LEN,
    'CARDDPL'	:   0x00 | ct.BFUINT32 | 18 << ct.BF_POS |  1 << ct.BF_LEN,
    'WRPPL'	:   0x00 | ct.BFUINT32 | 19 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATLL'	:   0x00 | ct.BFUINT32 | 20 << ct.BF_POS |  4 << ct.BF_LEN,
    'CMDLL'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'HC1R'	: ( 0x28, {
    'reg'	:   0x00 | ct.UINT8,
    'LEDCTRL'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'DW'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'HSEN'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'DMASEL'	:   0x00 | ct.BFUINT8 |  3 << ct.BF_POS |  2 << ct.BF_LEN,
    'CARDDTL'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'CARDDSEL'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'HC1R_EMMC_MODE'	: ( 0x28, {
    'reg'	:   0x00 | ct.UINT8,
    'DW'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'HSEN'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'DMASEL'	:   0x00 | ct.BFUINT8 |  3 << ct.BF_POS |  2 << ct.BF_LEN,
  }),
  'PCR'	: ( 0x29, {
    'reg'	:   0x00 | ct.UINT8,
    'SDBPWR'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'SDBVSEL'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  3 << ct.BF_LEN,
  }),
  'BGCR'	: ( 0x2A, {
    'reg'	:   0x00 | ct.UINT8,
    'STPBGR'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CONTR'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'RWCTRL'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'INTBG'	:   0x00 | ct.BFUINT8 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'BGCR_EMMC_MODE'	: ( 0x2A, {
    'reg'	:   0x00 | ct.UINT8,
    'STPBGR'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CONTR'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'WCR'	: ( 0x2B, {
    'reg'	:   0x00 | ct.UINT8,
    'WKENCINT'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'WKENCINS'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'WKENCREM'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'CCR'	: ( 0x2C, {
    'reg'	:   0x00 | ct.UINT16,
    'INTCLKEN'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'INTCLKS'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SDCLKEN'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'CLKGSEL'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'USDCLKFSEL'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  2 << ct.BF_LEN,
    'SDCLKFSEL'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'TCR'	: ( 0x2E, {
    'reg'	:   0x00 | ct.UINT8,
    'DTCVAL'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
  }),
  'SRR'	: ( 0x2F, {
    'reg'	:   0x00 | ct.UINT8,
    'SWRSTALL'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'SWRSTCMD'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'SWRSTDAT'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'NISTR'	: ( 0x30, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDC'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'BLKGE'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'DMAINT'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'BWRRDY'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BRDRDY'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'CINS'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'CREM'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'CINT'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'ERRINT'	:   0x00 | ct.BFUINT16 | 15 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'NISTR_EMMC_MODE'	: ( 0x30, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDC'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'BLKGE'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'DMAINT'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'BWRRDY'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BRDRDY'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'BOOTAR'	:   0x00 | ct.BFUINT16 | 14 << ct.BF_POS |  1 << ct.BF_LEN,
    'ERRINT'	:   0x00 | ct.BFUINT16 | 15 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EISTR'	: ( 0x32, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDTEO'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDCRC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDEND'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDIDX'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATTEO'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATCRC'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATEND'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURLIM'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMD'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADMA'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EISTR_EMMC_MODE'	: ( 0x32, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDTEO'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDCRC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDEND'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDIDX'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATTEO'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATCRC'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATEND'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURLIM'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMD'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADMA'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'BOOTAE'	:   0x00 | ct.BFUINT16 | 12 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'NISTER'	: ( 0x34, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDC'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'BLKGE'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'DMAINT'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'BWRRDY'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BRDRDY'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'CINS'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'CREM'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'CINT'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'NISTER_EMMC_MODE'	: ( 0x34, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDC'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'BLKGE'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'DMAINT'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'BWRRDY'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BRDRDY'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'BOOTAR'	:   0x00 | ct.BFUINT16 | 14 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EISTER'	: ( 0x36, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDTEO'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDCRC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDEND'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDIDX'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATTEO'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATCRC'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATEND'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURLIM'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMD'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADMA'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EISTER_EMMC_MODE'	: ( 0x36, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDTEO'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDCRC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDEND'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDIDX'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATTEO'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATCRC'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATEND'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURLIM'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMD'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADMA'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'BOOTAE'	:   0x00 | ct.BFUINT16 | 12 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'NISIER'	: ( 0x38, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDC'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'BLKGE'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'DMAINT'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'BWRRDY'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BRDRDY'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'CINS'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'CREM'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'CINT'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'NISIER_EMMC_MODE'	: ( 0x38, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDC'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'TRFC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'BLKGE'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'DMAINT'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'BWRRDY'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BRDRDY'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'BOOTAR'	:   0x00 | ct.BFUINT16 | 14 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EISIER'	: ( 0x3A, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDTEO'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDCRC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDEND'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDIDX'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATTEO'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATCRC'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATEND'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURLIM'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMD'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADMA'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'EISIER_EMMC_MODE'	: ( 0x3A, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDTEO'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDCRC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDEND'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDIDX'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATTEO'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATCRC'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATEND'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURLIM'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMD'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADMA'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'BOOTAE'	:   0x00 | ct.BFUINT16 | 12 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'ACESR'	: ( 0x3C, {
    'reg'	:   0x00 | ct.UINT16,
    'ACMD12NE'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMDTEO'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMDCRC'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMDEND'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMDIDX'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDNI'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'HC2R'	: ( 0x3E, {
    'reg'	:   0x00 | ct.UINT16,
    'UHSMS'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  3 << ct.BF_LEN,
    'VS18EN'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'DRVSEL'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  2 << ct.BF_LEN,
    'EXTUN'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'SLCKSEL'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'ASINTEN'	:   0x00 | ct.BFUINT16 | 14 << ct.BF_POS |  1 << ct.BF_LEN,
    'PVALEN'	:   0x00 | ct.BFUINT16 | 15 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'HC2R_EMMC_MODE'	: ( 0x3E, {
    'reg'	:   0x00 | ct.UINT16,
    'HS200EN'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
    'DRVSEL'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  2 << ct.BF_LEN,
    'EXTUN'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'SLCKSEL'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'PVALEN'	:   0x00 | ct.BFUINT16 | 15 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'CA0R'	: ( 0x40, {
    'reg'	:   0x00 | ct.UINT32,
    'TEOCLKF'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  6 << ct.BF_LEN,
    'TEOCLKU'	:   0x00 | ct.BFUINT32 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'BASECLKF'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
    'MAXBLKL'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  2 << ct.BF_LEN,
    'ED8SUP'	:   0x00 | ct.BFUINT32 | 18 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADMA2SUP'	:   0x00 | ct.BFUINT32 | 19 << ct.BF_POS |  1 << ct.BF_LEN,
    'HSSUP'	:   0x00 | ct.BFUINT32 | 21 << ct.BF_POS |  1 << ct.BF_LEN,
    'SDMASUP'	:   0x00 | ct.BFUINT32 | 22 << ct.BF_POS |  1 << ct.BF_LEN,
    'SRSUP'	:   0x00 | ct.BFUINT32 | 23 << ct.BF_POS |  1 << ct.BF_LEN,
    'V33VSUP'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  1 << ct.BF_LEN,
    'V30VSUP'	:   0x00 | ct.BFUINT32 | 25 << ct.BF_POS |  1 << ct.BF_LEN,
    'V18VSUP'	:   0x00 | ct.BFUINT32 | 26 << ct.BF_POS |  1 << ct.BF_LEN,
    'SB64SUP'	:   0x00 | ct.BFUINT32 | 28 << ct.BF_POS |  1 << ct.BF_LEN,
    'ASINTSUP'	:   0x00 | ct.BFUINT32 | 29 << ct.BF_POS |  1 << ct.BF_LEN,
    'SLTYPE'	:   0x00 | ct.BFUINT32 | 30 << ct.BF_POS |  2 << ct.BF_LEN,
  }),
  'CA1R'	: ( 0x44, {
    'reg'	:   0x00 | ct.UINT32,
    'SDR50SUP'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'SDR104SUP'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'DDR50SUP'	:   0x00 | ct.BFUINT32 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'DRVASUP'	:   0x00 | ct.BFUINT32 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DRVCSUP'	:   0x00 | ct.BFUINT32 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'DRVDSUP'	:   0x00 | ct.BFUINT32 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'TCNTRT'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  4 << ct.BF_LEN,
    'TSDR50'	:   0x00 | ct.BFUINT32 | 13 << ct.BF_POS |  1 << ct.BF_LEN,
    'CLKMULT'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'MCCAR'	: ( 0x48, {
    'reg'	:   0x00 | ct.UINT32,
    'MAXCUR33V'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  8 << ct.BF_LEN,
    'MAXCUR30V'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
    'MAXCUR18V'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'FERACES'	: ( 0x50, {
    'reg'	:   0x00 | ct.UINT16,
    'ACMD12NE'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMDTEO'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMDCRC'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMDEND'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMDIDX'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDNI'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'FEREIS'	: ( 0x52, {
    'reg'	:   0x00 | ct.UINT16,
    'CMDTEO'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDCRC'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDEND'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'CMDIDX'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATTEO'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATCRC'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATEND'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'CURLIM'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'ACMD'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADMA'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'BOOTAE'	:   0x00 | ct.BFUINT16 | 12 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'AESR'	: ( 0x54, {
    'reg'	:   0x00 | ct.UINT8,
    'ERRST'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  2 << ct.BF_LEN,
    'LMIS'	:   0x00 | ct.BFUINT8 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'ASAR'	: 0x58 | ct.UINT32,
  'PVR'	: ( 0x60 | ct.ARRAY, 8, {
    'reg'	:   0x00 | ct.UINT16,
    'SDCLKFSEL'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS | 10 << ct.BF_LEN,
    'CLKGSEL'	:   0x00 | ct.BFUINT16 | 10 << ct.BF_POS |  1 << ct.BF_LEN,
    'DRVSEL'	:   0x00 | ct.BFUINT16 | 14 << ct.BF_POS |  2 << ct.BF_LEN,
  }),
  'SISR'	: ( 0xFC, {
    'reg'	:   0x00 | ct.UINT16,
    'INTSSL'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'HCVR'	: ( 0xFE, {
    'reg'	:   0x00 | ct.UINT16,
    'SVER'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  8 << ct.BF_LEN,
    'VVER'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'MC1R'	: ( 0x204, {
    'reg'	:   0x00 | ct.UINT8,
    'CMDTYP'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  2 << ct.BF_LEN,
    'DDR'	:   0x00 | ct.BFUINT8 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'OPD'	:   0x00 | ct.BFUINT8 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BOOTA'	:   0x00 | ct.BFUINT8 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'RSTN'	:   0x00 | ct.BFUINT8 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'FCD'	:   0x00 | ct.BFUINT8 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'MC2R'	: ( 0x205, {
    'reg'	:   0x00 | ct.UINT8,
    'SRESP'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'ABOOT'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'ACR'	: ( 0x208, {
    'reg'	:   0x00 | ct.UINT32,
    'BMAX'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  2 << ct.BF_LEN,
  }),
  'CC2R'	: ( 0x20C, {
    'reg'	:   0x00 | ct.UINT32,
    'FSDCLKD'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'CACR'	: ( 0x230, {
    'reg'	:   0x00 | ct.UINT32,
    'CAPWREN'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'KEY'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'DBGR'	: ( 0x234, {
    'reg'	:   0x00 | ct.UINT8,
    'NIDBG'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
}

SDHC0 = ct.struct(0x45000000, SDHC_)
