import uctypes as ct

NVMCTRL_ = {
  'CTRLA'	: ( 0x00, {
    'reg'	:   0x00 | ct.UINT16,
    'AUTOWS'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'SUSPEN'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'WMODE'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  2 << ct.BF_LEN,
    'PRM'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  2 << ct.BF_LEN,
    'RWS'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  4 << ct.BF_LEN,
    'AHBNS0'	:   0x00 | ct.BFUINT16 | 12 << ct.BF_POS |  1 << ct.BF_LEN,
    'AHBNS1'	:   0x00 | ct.BFUINT16 | 13 << ct.BF_POS |  1 << ct.BF_LEN,
    'CACHEDIS0'	:   0x00 | ct.BFUINT16 | 14 << ct.BF_POS |  1 << ct.BF_LEN,
    'CACHEDIS1'	:   0x00 | ct.BFUINT16 | 15 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'CTRLB'	: ( 0x04, {
    'reg'	:   0x00 | ct.UINT16,
    'CMD'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  7 << ct.BF_LEN,
    'CMDEX'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'PARAM'	: ( 0x08, {
    'reg'	:   0x00 | ct.UINT32,
    'NVMP'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS | 16 << ct.BF_LEN,
    'PSZ'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  3 << ct.BF_LEN,
    'SEE'	:   0x00 | ct.BFUINT32 | 31 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'INTENCLR'	: ( 0x0C, {
    'reg'	:   0x00 | ct.UINT16,
    'DONE'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADDRE'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'PROGE'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'LOCKE'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'ECCSE'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'ECCDE'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'NVME'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'SUSP'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'SEESFULL'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'SEESOVF'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'SEEWRC'	:   0x00 | ct.BFUINT16 | 10 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'INTENSET'	: ( 0x0E, {
    'reg'	:   0x00 | ct.UINT16,
    'DONE'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADDRE'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'PROGE'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'LOCKE'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'ECCSE'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'ECCDE'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'NVME'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'SUSP'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'SEESFULL'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'SEESOVF'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'SEEWRC'	:   0x00 | ct.BFUINT16 | 10 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'INTFLAG'	: ( 0x10, {
    'reg'	:   0x00 | ct.UINT16,
    'DONE'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'ADDRE'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'PROGE'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'LOCKE'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'ECCSE'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'ECCDE'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'NVME'	:   0x00 | ct.BFUINT16 |  6 << ct.BF_POS |  1 << ct.BF_LEN,
    'SUSP'	:   0x00 | ct.BFUINT16 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'SEESFULL'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'SEESOVF'	:   0x00 | ct.BFUINT16 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'SEEWRC'	:   0x00 | ct.BFUINT16 | 10 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'STATUS'	: ( 0x12, {
    'reg'	:   0x00 | ct.UINT16,
    'READY'	:   0x00 | ct.BFUINT16 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'PRM'	:   0x00 | ct.BFUINT16 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'LOAD'	:   0x00 | ct.BFUINT16 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'SUSP'	:   0x00 | ct.BFUINT16 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'AFIRST'	:   0x00 | ct.BFUINT16 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'BPDIS'	:   0x00 | ct.BFUINT16 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'BOOTPROT'	:   0x00 | ct.BFUINT16 |  8 << ct.BF_POS |  4 << ct.BF_LEN,
  }),
  'ADDR'	: ( 0x14, {
    'reg'	:   0x00 | ct.UINT32,
    'ADDR'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS | 24 << ct.BF_LEN,
  }),
  'RUNLOCK'	: 0x18 | ct.UINT32,
  'PBLDATA'	: ( 0x1C | ct.ARRAY, 2 | ct.UINT32 ),
  'ECCERR'	: ( 0x24, {
    'reg'	:   0x00 | ct.UINT32,
    'ADDR'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS | 24 << ct.BF_LEN,
    'TYPEL'	:   0x00 | ct.BFUINT32 | 28 << ct.BF_POS |  2 << ct.BF_LEN,
    'TYPEH'	:   0x00 | ct.BFUINT32 | 30 << ct.BF_POS |  2 << ct.BF_LEN,
  }),
  'DBGCTRL'	: ( 0x28, {
    'reg'	:   0x00 | ct.UINT8,
    'ECCDIS'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'ECCELOG'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'SEECFG'	: ( 0x2A, {
    'reg'	:   0x00 | ct.UINT8,
    'WMODE'	:   0x00 | ct.BFUINT8 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'APRDIS'	:   0x00 | ct.BFUINT8 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'SEESTAT'	: ( 0x2C, {
    'reg'	:   0x00 | ct.UINT32,
    'ASEES'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'LOAD'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  1 << ct.BF_LEN,
    'BUSY'	:   0x00 | ct.BFUINT32 |  2 << ct.BF_POS |  1 << ct.BF_LEN,
    'LOCK'	:   0x00 | ct.BFUINT32 |  3 << ct.BF_POS |  1 << ct.BF_LEN,
    'RLOCK'	:   0x00 | ct.BFUINT32 |  4 << ct.BF_POS |  1 << ct.BF_LEN,
    'SBLK'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  4 << ct.BF_LEN,
    'PSZ'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  3 << ct.BF_LEN,
  }),
}

NVMCTRL = ct.struct(0x41004000, NVMCTRL_, ct.LITTLE_ENDIAN)
