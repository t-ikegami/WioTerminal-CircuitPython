import uctypes as ct

DWT_ = {
  'CTRL'	: ( 0x00, {
    'reg'	:   0x00 | ct.UINT32,
    'CYCCNTENA'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  1 << ct.BF_LEN,
    'POSTPRESET'	:   0x00 | ct.BFUINT32 |  1 << ct.BF_POS |  4 << ct.BF_LEN,
    'POSTINIT'	:   0x00 | ct.BFUINT32 |  5 << ct.BF_POS |  4 << ct.BF_LEN,
    'CYCTAP'	:   0x00 | ct.BFUINT32 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'SYNCTAP'	:   0x00 | ct.BFUINT32 | 10 << ct.BF_POS |  2 << ct.BF_LEN,
    'PCSAMPLENA'	:   0x00 | ct.BFUINT32 | 12 << ct.BF_POS |  1 << ct.BF_LEN,
    'EXCTRCENA'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  1 << ct.BF_LEN,
    'CPIEVTENA'	:   0x00 | ct.BFUINT32 | 17 << ct.BF_POS |  1 << ct.BF_LEN,
    'EXCEVTENA'	:   0x00 | ct.BFUINT32 | 18 << ct.BF_POS |  1 << ct.BF_LEN,
    'SLEEPEVTENA'	:   0x00 | ct.BFUINT32 | 19 << ct.BF_POS |  1 << ct.BF_LEN,
    'LSUEVTENA'	:   0x00 | ct.BFUINT32 | 20 << ct.BF_POS |  1 << ct.BF_LEN,
    'FOLDEVTENA'	:   0x00 | ct.BFUINT32 | 21 << ct.BF_POS |  1 << ct.BF_LEN,
    'CYCEVTENA'	:   0x00 | ct.BFUINT32 | 22 << ct.BF_POS |  1 << ct.BF_LEN,
    'NOPRFCNT'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  1 << ct.BF_LEN,
    'NOCYCCNT'	:   0x00 | ct.BFUINT32 | 25 << ct.BF_POS |  1 << ct.BF_LEN,
    'NOEXTTRIG'	:   0x00 | ct.BFUINT32 | 26 << ct.BF_POS |  1 << ct.BF_LEN,
    'NOTRCPKT'	:   0x00 | ct.BFUINT32 | 27 << ct.BF_POS |  1 << ct.BF_LEN,
    'NUMCOMP'	:   0x00 | ct.BFUINT32 | 28 << ct.BF_POS |  4 << ct.BF_LEN,
  }),
  'CYCCNT'	: 0x04 | ct.UINT32,
  'CPICNT'	: ( 0x08, {
    'reg'	:   0x00 | ct.UINT32,
    'CPICNT'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'EXCCNT'	: ( 0x0C, {
    'reg'	:   0x00 | ct.UINT32,
    'EXCCNT'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'SLEEPCNT'	: ( 0x10, {
    'reg'	:   0x00 | ct.UINT32,
    'SLEEPCNT'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'LSUCNT'	: ( 0x14, {
    'reg'	:   0x00 | ct.UINT32,
    'LSUCNT'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'FOLDCNT'	: ( 0x18, {
    'reg'	:   0x00 | ct.UINT32,
    'FOLDCNT'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  8 << ct.BF_LEN,
  }),
  'PCSR'	: 0x1C | ct.UINT32,
  'COMP0'	: 0x20 | ct.UINT32,
  'MASK0'	: ( 0x24, {
    'reg'	:   0x00 | ct.UINT32,
    'MASK'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  5 << ct.BF_LEN,
  }),
  'FUNCTION0'	: ( 0x28, {
    'reg'	:   0x00 | ct.UINT32,
    'FUNCTION'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
    'EMITRANGE'	:   0x00 | ct.BFUINT32 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'CYCMATCH'	:   0x00 | ct.BFUINT32 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATAVMATCH'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'LNK1ENA'	:   0x00 | ct.BFUINT32 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATAVSIZE'	:   0x00 | ct.BFUINT32 | 10 << ct.BF_POS |  2 << ct.BF_LEN,
    'DATAVADDR0'	:   0x00 | ct.BFUINT32 | 12 << ct.BF_POS |  4 << ct.BF_LEN,
    'DATAVADDR1'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  4 << ct.BF_LEN,
    'MATCHED'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'COMP1'	: 0x30 | ct.UINT32,
  'MASK1'	: ( 0x34, {
    'reg'	:   0x00 | ct.UINT32,
    'MASK'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  5 << ct.BF_LEN,
  }),
  'FUNCTION1'	: ( 0x38, {
    'reg'	:   0x00 | ct.UINT32,
    'FUNCTION'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
    'EMITRANGE'	:   0x00 | ct.BFUINT32 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'CYCMATCH'	:   0x00 | ct.BFUINT32 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATAVMATCH'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'LNK1ENA'	:   0x00 | ct.BFUINT32 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATAVSIZE'	:   0x00 | ct.BFUINT32 | 10 << ct.BF_POS |  2 << ct.BF_LEN,
    'DATAVADDR0'	:   0x00 | ct.BFUINT32 | 12 << ct.BF_POS |  4 << ct.BF_LEN,
    'DATAVADDR1'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  4 << ct.BF_LEN,
    'MATCHED'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'COMP2'	: 0x40 | ct.UINT32,
  'MASK2'	: ( 0x44, {
    'reg'	:   0x00 | ct.UINT32,
    'MASK'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  5 << ct.BF_LEN,
  }),
  'FUNCTION2'	: ( 0x48, {
    'reg'	:   0x00 | ct.UINT32,
    'FUNCTION'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
    'EMITRANGE'	:   0x00 | ct.BFUINT32 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'CYCMATCH'	:   0x00 | ct.BFUINT32 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATAVMATCH'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'LNK1ENA'	:   0x00 | ct.BFUINT32 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATAVSIZE'	:   0x00 | ct.BFUINT32 | 10 << ct.BF_POS |  2 << ct.BF_LEN,
    'DATAVADDR0'	:   0x00 | ct.BFUINT32 | 12 << ct.BF_POS |  4 << ct.BF_LEN,
    'DATAVADDR1'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  4 << ct.BF_LEN,
    'MATCHED'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
  'COMP3'	: 0x50 | ct.UINT32,
  'MASK3'	: ( 0x54, {
    'reg'	:   0x00 | ct.UINT32,
    'MASK'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  5 << ct.BF_LEN,
  }),
  'FUNCTION3'	: ( 0x58, {
    'reg'	:   0x00 | ct.UINT32,
    'FUNCTION'	:   0x00 | ct.BFUINT32 |  0 << ct.BF_POS |  4 << ct.BF_LEN,
    'EMITRANGE'	:   0x00 | ct.BFUINT32 |  5 << ct.BF_POS |  1 << ct.BF_LEN,
    'CYCMATCH'	:   0x00 | ct.BFUINT32 |  7 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATAVMATCH'	:   0x00 | ct.BFUINT32 |  8 << ct.BF_POS |  1 << ct.BF_LEN,
    'LNK1ENA'	:   0x00 | ct.BFUINT32 |  9 << ct.BF_POS |  1 << ct.BF_LEN,
    'DATAVSIZE'	:   0x00 | ct.BFUINT32 | 10 << ct.BF_POS |  2 << ct.BF_LEN,
    'DATAVADDR0'	:   0x00 | ct.BFUINT32 | 12 << ct.BF_POS |  4 << ct.BF_LEN,
    'DATAVADDR1'	:   0x00 | ct.BFUINT32 | 16 << ct.BF_POS |  4 << ct.BF_LEN,
    'MATCHED'	:   0x00 | ct.BFUINT32 | 24 << ct.BF_POS |  1 << ct.BF_LEN,
  }),
}

DWT = ct.struct(0xe0001000, DWT_)
